name: Build Docker Image

on:
  push:
    tags:
      - '*'
      
jobs:
  deploy:
    runs-on: ubuntu-latest
    name: "Deploy image on Dockerhub"
    steps:
      - name: Check out
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: '${{ secrets.PERSONAL_ACCESS_TOKEN }}'
      - run: echo ${{ github.ref }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Get smart tag
        id: prepare
        uses: jupyter-naas/docker-smart-tag-action@1.0.0
        with:
          ref: ${{ github.ref }}
          docker_image: jupyternaas/singleuser
      - run: echo ${{ steps.prepare.outputs.tag }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.prepare.outputs.tag }}
      - name: Image digest
        run: echo ${{ steps.prepare.outputs.tag }}
      - uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag
      - uses: actions-ecosystem/action-regex-match@v2
        id: regex-match
        with:
          text: ${{ steps.get-latest-tag.outputs.tag }}
          regex: '^\d*\.\d*\.\d*$'
      - name: Checkout Target Repository
        if: ${{ steps.regex-match.outputs.match != '' }}
        uses: actions/checkout@v2
        with:
          repository: jupyter-naas/naas
          path: naas_repo
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }} 
      - name: Setup github user
        if: ${{ steps.regex-match.outputs.match != '' }}
        run: git config --global user.name "actions-user" && git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - name: Update naas file
        if: ${{ steps.regex-match.outputs.match != '' }}  
        run: sed -i 's_FROM jupyternaas/singleuser:.*$_FROM jupyternaas/singleuser:${{ steps.get-latest-tag.outputs.tag }}_' naas_repo/Dockerfile
      - name: Push naas file
        if: ${{ steps.regex-match.outputs.match != '' }}
        run: 'cd naas_repo && git add setup.py && git commit -m "chore: update singleuser {{ steps.get-latest-tag.outputs.tag }}" && git push'
      - name: release kind
        id: release_kind
        run: |
          if [[ $REF == *"b"* ]]
          then
              echo "::set-output name=release::dev"
          else
              echo "::set-output name=release::main"
          fi
        env:
          REF: ${{ github.ref }}
      - name: release kind
        run: echo ${{ steps.release_kind.outputs.release }}
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          repository: jupyter-naas/naas
          event-type: pypip-deployed
          client-payload: '{"ref": "refs/heads/${{ steps.release_kind.outputs.release }}"}'
      - name: Slack notification
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_AVATAR: repository
          SLACK_CUSTOM_PAYLOAD: '{"attachments":[{"color":"#47dd82","blocks":[{"type":"section","block_id":"section567","text":{"type":"mrkdwn","text":"<https://github.com/{{ GITHUB_REPOSITORY }}|{{ GITHUB_REPOSITORY }}>\nAvailable to docker hub.\n*Version*\n${{ steps.release_kind.outputs.release }}"},"accessory":{"type":"image","image_url":"https://github.com/jupyter-naas/naas/raw/main/custom/naas-fav.png","alt_text":"Naas logo"}}]}]}'
        uses: Ilshidur/action-slack@2.0.2
